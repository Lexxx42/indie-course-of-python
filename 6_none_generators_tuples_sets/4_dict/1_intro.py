# Знакомство со словарем

# Словарь (его еще называют ассоциативным списком) –
# неупорядоченная совокупность произвольных объектов с доступом по ключу.

# Словари это очень важный тип данных, вы будете с ним очень часто работать,
# возможно так же часто как и со списками.
# У списков все элементы имеют свой порядковый номер(индекс) и каждый элемент связан с этим порядковым номером.
# В этом прелесть списков, но и недостаток.
# Минус в том, что вы не можете сделать другую связь, всегда связь значения списка с числом,
# которое представляет индекс.
# Словари позволяют сделать связь между значением и другим объектом, не только с числом.

# Давайте рассмотрим пример, возьмем список с городами:
#
# a = ['moscow', 'saint petersburg', 'penza']
# По умолчанию элемент moscow ассоциируется с индексом 0,
# saint petersburg - с индексом 1, а penza - с индексом 2.
# Но что, если нам нужно, чтобы наши города ассоциировались с другими числами,
# например с телефонным кодом города?
#
# У города moscow телефонный код - 495, у saint petersburg - 812, у penza – 8412.
# Подобные соответствия можно назвать ассоциацией и для создания таких ассоциацией
# в python существует объект под названием словарь(dictionary).
# Немного сократив английское слово dictionary, получаем название типа данных dict.
# Именно с этим типом данных мы будем знакомиться в этой главе

# Давайте сперва научимся словарь создавать

# Способы создания словаря
# 1 вариант
# Для создания словаря необходимо открыть фигурные скобки {}
# и поочередно через запятую указывать пары элементов, разделенных двоеточием.
# Первый элемент пары называется ключ, а второй – значение.
# Каждая такая пара является одним элементом словаря.

# Пример словаря:

cities = {
    "moscow": 495,
    "saint petersburg": 812,
    "penza": 8412
}
print(cities)
print(type(cities))

# 2 вариант
# Словарь можно создать при помощи функции dict().
# Внутри функции dict() пишем ключ и присваиваем ему значение:

cities = dict(moskva=495, piter=812, penza=8412)
print(cities)
print(type(cities))

# Обратите внимание на то, что внутри функции dict() значение ключей мы пишем без кавычек,
# поскольку эта функция автоматически приведёт ключи к строке.

# Но такой способ создания словарей используется только тогда,
# когда в качестве ключа выступает строковой тип данных.
# Использование чисел или иных типов данных приведёт к ошибке.

# 2.2) Создаем отдельный вложенный список,
# элементами которого будут списки,
# состоящие из двух элементов: первое будет ключом, второе – значением.

a = [['moskva', 495], ['piter', 812], ['penza', 8412]]
cities = dict(a)
print(cities)
print(type(cities))

# Способы создания пустого словаря

# 1) Пустой словарь можно создать при помощи пустых фигурных скобок {}

empty_dict = {}
print(empty_dict)
print(type(empty_dict))

# 2) Пустой словарь можно создать при помощи функции dict() с пустыми параметрами:

another_empty_dict = dict()
print(another_empty_dict)
print(type(another_empty_dict))


