# Операции над множествами

# В этом разделе мы рассмотрим стандартные операции,
# с которыми вы уже знакомы по другим типам данных.
# А в следующем разделе узнаем какие специфичные операции поддерживают только множества.
# Итак, давайте приступим.
# Множество, напоминаю, представляет собой неупорядоченную коллекцию элементов.
# Раз это коллекция, то к ней можно применять такие стандартные операции как нахождение длины,
# проверки вхождения элемента, итерирование и т.д.

# Нахождение длины множества
# При помощи функции len() можем найти количество элементов множества

a = {1, 2, 3}
print(f'Длина a = {len(a)}')

b = set()
print(f'Длина b = {len(b)}')

c = set([1, 1, 2, 2, 1, 2, 1])
print(f'Длина c = {len(c)}')

# Проверка на нахождение
# Оператор in позволяет проверить имеется ли элемент в множестве или нет.
# Если данный элемент присутствует, то результат будет True, в обратном случае – False.

a = {1, 2, 3}
print(2 in a)
print(5 in a)
print(4 not in a)
print(1 not in a)

# Поиск максимума и минимума в множестве
# Функции min(), max() позволяют найти минимальный и максимальный элемент множества

a = {1, 2, 3}
print(min(a), max(a))

b = set([11, 19, 22, 2, 13, 22, 10])
print(min(b), max(b))

# Функции min(), max() можно использовать только если множество состоит из однотипных элементов,
# которые можно сравнить между собой (целиком из чисел или целиком из строк).
# Если бы наше множество было бы таким:

# a = {1, 2, 'hi', 4, 5}
# то получили бы ошибку TypeError: '>' not supported between instances of 'str' and 'int'.

# Суммирование элементов множества

# Просуммировать элементы множества возможно, если оно состоит исключительно из чисел:

a = {2, 4, 5, 7, 8, 9}
print(sum(a))

# Если в множестве будут присутствовать не числа, то получим ошибку TypeError:
# unsupported operand type(s) for +

# Сортировка множества

# При помощи функции sorted() можно отсортировать множество,
# если в нем содержатся однородные элементы.

# Результат работы функции sorted() всегда является список

my_set = {8, 4, 7, 5, 2, 3, 6}

sorted_list = sorted(my_set)
print(sorted_list)

my_string_set = {'profit', 'fare', 'thesis',
                 'architecture', 'insurance',
                 'hero', 'shrink', 'north',
                 'drill', 'toast'}
print(sorted(my_string_set))

# Если внутри вашего множества будут хранится элементы,
# не поддерживающие операцию сравнения между собой (например числа и строки),
# получите ошибку TypeError: '<' not supported between instances of 'str' and 'int'

# Операции, которые нельзя выполнять над множествами

# Индексация

# К элементам множества нельзя обращаться по индексу,
# это приведет к ошибке TypeError: 'set' object is not subscriptable

# Функция reversed

# Функцию reversed() нельзя использовать для множества,
# так как множество представляет собой неупорядоченную коллекцию.
# При попытке вызывать функцию reversed() вы получите ошибку TypeError:
# 'set' object is not reversible
