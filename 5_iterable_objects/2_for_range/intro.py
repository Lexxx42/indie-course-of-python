# Цикл for. Обход элементов функции range

# Цикл for позволяет поочередно обойти все элементы итерируемой последовательности
# или итерируемого объекта. Сегодня рассмотрим использование цикла for с функцией range().

# Формат цикла for:
#
# for <переменная> in <последовательность>:
#
#     <тело цикла>

# Разберем первый пример:

for i in range(4):
    print(i)

# Цикл for присваивает переменной i первый элемент последовательности из range,
# который равен 0. Затем мы выводим 0, возвращаемся в начало цикла
# и присваиваем переменной i следующее значение.
# Так будет работать до тех пор, пока цикл не обойдет всю последовательность.
#
# Обычно в качестве переменной цикла for используют букву  i,
# но можно назвать эту переменную иначе.
# Вы можете использовать любое имя, которое будет легко запомнить.
# Если вы изменили имя переменной в for,
# то её название должно быть изменено везде, где оно встречается в теле цикла:

for number in range(4):
    print(number)

# В примере выше мы заменили название переменной i на number,
# при этом программа работает точно так же, как и до этого.
# Также стоит отметить, что внутри цикла значение этой переменной можно менять,
# как захочется, но это изменение не повлияет на следующее значение переменной. Например:

for i in range(4):
    print(i)
    i = "hello"

# Мы присвоили другое значение переменной i , но это не повлияло на то,
# какой результат будет следующим, т.к. цикл for помнит,
# какое значение вы брали на каждом проходе цикла, и, возвращаясь к началу, берет следующее.

# Чтобы удостовериться, что строка i = "hello"  работает,
# можно вывести переменную i ещё раз:

for i in range(4):
    print(i)
    i = "hello"
    print(i)

# Также стоит учитывать, что после завершения цикла переменная i
# будет принимать последнее значение последовательности range().
# Для демонстрации этого посмотрим, что будет выводить следующий код:

for i in range(4):
    print("inside", i)
print("outside", i)

# Как мы видим, последнее значение i, расположенное вне цикла for,
# равно последнему значению i внутри этого цикла.

# Применение range в цикле for

# Существует 2 варианта применения  функции range() в цикле for.

# Вариант 1

# Обход какой-то заданной последовательности в цикле for при помощи функции range().
# Мы это реализовывали, когда в цикле выводили i,
# т.е. проходили последовательность чисел от 0 до 3.
# Если нужно пройти другую последовательность, например,
# все трехзначные числа, то необходимо написать следующий код:

for i in range(100, 1000):
    print(i)

# В итоге программа выведет числа от 100 до 999 включительно.

# Внутри цикла также можно ставить какие-либо условия,
# например, можно вывести все числа, которые делятся только на 2 и 7:

for i in range(100, 1000):
    if i % 2 == 0 and i % 7 == 0:
        print(i)

# В итоге получим все трёхзначные числа, которые делятся как на 2, так и на 7.

# Можно также вывести все квадраты чисел от 1 до 10.

# Выведем и число, и его квадрат:

for i in range(1, 11):
    print(i, i ** 2)

# В итоге, мы получили числа от 1 до 10 (включительно) и их квадраты.

# На предыдущем занятии мы рассматривали, как найти сумму чисел от 1 до 100 (включительно)
# при помощи функции sum() и range().
# Сумму чисел также можно найти при помощи цикла for.
# Для этого создадим новую переменную, в которой накапливается сумма,
# и которая в начале должна равняться нулю.
# В самом цикле мы будем добавлять к сумме переменную i,
# сохраняя это в переменной sum.
# По завершении цикла выведем результат нашего сложения.

sum = 0
for i in range(1, 101):
    sum = sum + i
print(sum)

# Также часто встречаются задачи, в которых нужно найти факториал какого-либо числа.
# Для нахождения факториала нужно умножить между собой все числа от 1 до этого числа включительно.
# Таким образом факториал 4! = 1 * 2 * 3 * 4 = 24.
# Для этого необходимо только немного изменить код:

pr = 1
for i in range(1, 5):
    pr = pr * i
print(pr)

# Здесь мы изменили название переменной так, чтобы оно больше подходило.
# Значение переменной мы изменили с 0 на 1, чтобы не нужно было умножать на 0.
# В функции range() подставили нужные нам значения.
# Далее мы умножаем переменные pr и i между собой.

# Чтобы найти факториал числа n, необходимо добавить переменную,
# которая принимает вводимое значение,
# и указать эту переменную + 1 в функции range
# (+1 необходим, т.к. если просто указать это число, то цикл не сможет его взять).
# В итоге код будет следующим:

n = int(input('Введите число: '))
pr = 1
for i in range(1, n + 1):
    pr = pr * i
print(f'Факториал {n} = {pr}')

# Вариант 2

# Повторение какого-то действия определенное количество раз. Например:

for i in range(3):
    print("hello")

# Если изменить значение переменной в функции range(),
# то получим другое количество выводов фразы hello.
# Здесь также можно добавить переменную,
# которая будет принимать число и выводить определенное количество раз эту фразу:

n = int(input('Введите число: '))

for i in range(n):
    print("hello")

# Разберём ещё один пример, в котором нужно вывести 5 случайных чисел от 1 до 100.
# Для этого необходимо импортировать модуль random, а точнее его функцию randint.
# Функция randint принимает 2 параметра – от какого
# и по какое число (включительно) нужно выбрать случайное число.

from random import randint

for i in range(5):
    a = randint(1, 100)
    print(a, end=" ")

# При повторном запуске значения будут уже другими,
# поскольку числа выбираются случайным образом.
# Вы также можете изменить диапазон генерации случайных чисел.

# Также можно посчитать их сумму.
# Уменьшим общее количество случайных чисел и добавим счётчик.
# В итоге получится следующий код:

from random import randint

s = 0

for i in range(3):
    a = randint(1, 10)
    s += a
    print(a, end=" ")
print(s)

# Здесь мы видим 3 случайных числа и их сумму.
# Всё это на одной строке, поскольку вместо переноса строки у нас стоит пробел,
# т.к. мы это указали в параметре end.
# Чтобы вывести их сумму на другую строку,
# достаточно после завершения цикла поставить пустой print(),
# параметр end у которого равен переносу строки.

from random import randint

s = 0
for i in range(3):
    a = randint(1, 10)
    s += a
    print(a, end=" ")

print()
print(s)

# Можно сделать и так, чтобы пользователь сам вводил нужное ему количество случайных чисел:

from random import randint

s = 0
n = int(input())
for i in range(n):
    a = randint(1, 10)
    s += a
    print(a, end=" ")
print()
print(s)

# Во всех этих примерах мы использовали функцию range() только для того,
# чтобы повторить цикл определенное количество раз,
# и внутри этих циклов мы нигде не использовали переменную i.

# Рассмотрим другие примеры, где можно использовать переменную i.
# Например:

for i in range(1, 11):
    print("*" * i)

# Это произошло потому, что при умножении строки на число,
# она (строка) повторяется определенное количество раз.
# При умножении на 1 мы получили 1 изначальную строку,
# при умножении на 2 - получили 2 изначальных строки и т.д.

# Вместо строки можно вывести, например, первые 10 степеней числа 2:

for i in range(1, 11):
    print(2 ** i)

# Рассмотрим ещё один пример:

n = int(input())
s = 0
for i in range(n):
    a = int(input())
    s += a
    print("current s:", s)

print("total", s)
print("average =", s / n)

# Теперь при вводе любого числа программа будет работать до тех пор,
# пока пользователь не введёт указанное количество чисел.
# Например, при вводе 3 мы должны будем ввести 3 числа,
# и после каждого будет выводиться сумма введенных чисел.
# В самом конце мы получим общую сумму чисел и среднее арифметическое.
