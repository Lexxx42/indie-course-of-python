# Инструкции break, continue, else

# Перед тем, как приступить к непосредственной теме урока необходимо узнать о бесконечных циклах.

# Бесконечный цикл - цикл, написанный таким образом,
# что условие выхода из него никогда не сработает,
# таким образом он выполняется бесконечное количество раз.
# Пример бесконечного цикла:

a = 1
while a > 0:
    print(a)
    a += 1

# В подобном случае программа будет выводить числа до тех пор, пока её принудительно не остановят,
# поскольку условие всегда будет верным. Принудительно остановить выполнение программы можно нажав в консоли

# CTRL + C/Z

# Но тогда ваша программа полностью остановится.
# Если вы хотите только выйти из бесконечного цикла, то вам в этом поможет оператор break

# Инструкция break

# Оператор break используется для принудительного выхода из цикла.
# Цикл прерывается без ошибок и дальше программа сразу переходит к выполнению инструкций,
# которые следуют за циклом while. Реализуется break следующим образом

a = 1
while a > 0:
    print(a)
    if a == 5:
        break
    a += 1

# В итоге наша программа выведет числа от 1 до 5 и цикл завершится.
# Следует отметить, что break выходит из цикла целиком и если в цикле были инструкции,
# расположенные ниже команды, то они выполнены не будут.

# Инструкция continue

# Позволяет перейти к следующей итерации цикла до завершения всех команд в данном цикле.
# Вот пример простейшего применения инструкции continue, который выводит четные числа от 1 до 10

a = 0
while a <= 10:
    a += 1
    if a % 2 != 0:
        continue
    print(a)

# В этом коде каждый раз когда a является нечетным числом
# continue прерывает текущую итерацию и отправляет нас к следующей.

# Инструкция else

# Она позволяет выполнить блок определенного кода, если цикл заканчивается без принудительного выхода.
# Для примера узнаем состоит ли список a только из чётных цифр и выведем No или Yes.

a = [24, 68, 42, 32, 23, 18, 22]
while len(a) > 0:
    last = a.pop()
    if last % 2 != 0:
        print('No')
        break
    print(f'{last} четное число')
else:
    print('Yes')

# В примере выше мы увидели вывод слова No, так как наш цикл закончился принудительно.
# Когда срабатывает инструкция break блок else будет пропущен.
# А вот в примере ниже мы зайдем в блок else, потому что break не сработает

a = [24, 68, 42, 32, 18, 22]
while len(a) > 0:
    last = a.pop()
    if last % 2 != 0:
        print('No')
        break
    print(f'{last} четное число')
else:
    print('Yes')
