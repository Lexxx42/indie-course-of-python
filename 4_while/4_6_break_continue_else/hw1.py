# Программа получает на вход натуральное число n > 1.
# Выведите минимальный делитель этого числа, отличный от единицы.

# К примеру для числа 12 делителями являются 1, 2, 3, 4, 6, 12.

# Sample Input 1:

# 12
# Sample Output 1:

# 2
# Sample Input 2:

# 15
# Sample Output 2:

# 3
# Sample Input 3:

# 7
# Sample Output 3:

# 7

a = int(input())
i = 2
while True:
    if not a % i:
        print(i)
        break
    i += 1

# Если число заканчивается на 2, 4, 6, 8, 0 - оно чётное,
# даже в инт переводить незачем.
# Значит, нас интересует величина от 3.
# А дальше нигде не искал, просто пришло в голову:
# а не связан ли как-то остаток от деления с нахождением наименьшего делителя?
# И шо вы себе думаете, он таки связан!
# Увеличиваю делитель в каждой итерации, прибавляя к нему остаток от деления.
# Что позволяет делать всё большие прыжки,
# пропуская кучу пустых вычислений и сокращая время выполнения кода.
# Я молодец? - я молодец!
#
# cnt - это счётчик итераций, для наглядности.
# Например, для 7555, являющегося простым числом,
# прокрутило не семь с половиной тысяч, а всего 23 цикла.

a = int(x := input())
if x[-1] in '24680':
    print(2)
else:
    c = 3
    cnt = 0
    while True:
        if (s := a % c):
            c += s
        else:
            print(c)
            break
        cnt += 1

# print('Loops', cnt)

# n = int(input())
# c, cnt = 2, 0
# a = n ** 0.5 + 1
# while c < a:
#     if (s:= n % c):
#         c += s
#     else:
#         print(c)
#         break
#     cnt += 1
# else:
#     print(n)
# print('Loops', cnt)
#
# Проверка на четность имхо необязательна, она и так выполнится при делении на 2.
# Плюс предлагаю ограничить перебор квадратным корнем вводимого числа.

# Это не наибольший общий делитель, это наименьший личный))
# А ещё это хороший тест на "простое число или нет",
# если наименьший делитель равен самому числу
# (ну, либо не появился на участке "квадратного корня") - то число простое.
# В следующем блоке как раз будет минимум одна задача на выборку простых чисел, пригодится.
# Хотя допилить до НОД эту штуку недолго.

# Вот в таком виде оно покажет все делители числа, кроме единицы:
#
# a = int(input())
# for x in range(2, a + 1):
#     if a % x:
#         x += a % x
#     else:
#         print(x)
#         x += 1
#
# Почему всё же не корень? А потому что все делители, например, числа 100 будут:
#
# 2
# 4
# 5
# 10
# 20
# 25
# 50
# 100
#
# и для 100 и, скажем, 150 НОД будет 50, а не 10. В случае с корнем мы об этом не узнаем.
